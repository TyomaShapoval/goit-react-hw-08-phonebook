{"version":3,"file":"static/js/353.46ac9bd4.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm .jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.scss?9b70","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.scss?1c6d"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getFilter = state => state.contacts.filter;\nexport const getContacts = state => state.contacts.contacts;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n    );\n    return visibleContacts;\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport scss from '../LoginForm/LoginForm.module.scss'\nimport { toast } from 'react-toastify';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const allContacts = useSelector(getContacts);\n\n  let exist = true\n\n  function handelInputChange(event) {\n    if (event.currentTarget.name === 'name') {\n      setName(event.currentTarget.value);\n    } else if (event.currentTarget.name === 'number') {\n      setNumber(event.currentTarget.value);\n    } else {\n      return;\n    }\n  }  \n\n  function reset() {\n    setName('');\n    setNumber('');\n    exist = true\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    allContacts.map((conta) => {\n      if(conta.name.includes(name)) {\n        toast.warn(`${name} is already exists`);\n        exist = false;\n      }\n      return conta\n    })\n\n    if(exist) {\n      dispatch(addContacts({ name, number }));\n      reset();\n    }\n  }\n\n  return (\n    <section className={scss.container}>\n      <form className={scss.form} onSubmit={handleSubmit}>\n\n        <input className={scss.inputField} value={name} onChange={handelInputChange} autoComplete=\"off\" type=\"text\" placeholder='Name*' name=\"name\" pattern=\"^[a-zA-Zа-яА-Я]+(([' \\(\\)-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\" required />\n        \n        <input className={scss.inputField} value={number} onChange={handelInputChange} autoComplete=\"off\" type=\"tel\" placeholder='Number*' name=\"number\" min=\"5\" required />\n\n        <label>\n          <button className={scss.auth} type=\"submit\">Add contact</button>\n        </label>\n      </form>\n    </section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"ContactsList_title__V0aIc\",\"list\":\"ContactsList_list__uSxD5\",\"nameText\":\"ContactsList_nameText__4c0jM\",\"btn\":\"ContactsList_btn__sfJ-X\"};","import React from 'react';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport {\n  getLoading,\n  getError,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport { fetchContacts } from '../../redux/contacts/operations';\n\nimport scss from './ContactsList.module.scss'\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(getLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n        <h2 className={scss.title}>My contacts</h2>\n        {isLoading && !error && <b>Request in progress...</b>}\n        <ul>\n          {contacts.length > 0\n            ? contacts.map(contact => (\n                <li className={scss.list} key={contact.id}>\n                  <p className={scss.nameText}>\n                    {contact.name}: {contact.number}\n                  </p>\n                  <button className={scss.btn} onClick={() => dispatch(deleteContacts(contact.id))}>\n                    delete\n                  </button>\n                </li>\n              ))\n            : 'No contact here yet'}\n        </ul>\n      </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { filterContacts } from '../../redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport scss from '../LoginForm/LoginForm.module.scss'\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  function filterName(event) {\n    dispatch(filterContacts(event.currentTarget.value));\n  }\n\n  return (\n    <input className={scss.inputField} type=\"text\" placeholder='find contact' value={filter} onChange={filterName} />\n  );\n};","import ContactForm from '../components/ContactForm/ContactForm ';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { Filter } from '../components/Filter/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <div style={{ display: \"flex\", alignItems: 'start', justifyContent: \"space-evenly\", paddingTop: \"40px\" }}>\n      <ContactForm />\n      <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n        <Filter />\n        <ContactsList />\n      </div>\n    </div>\n  );\n};\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__d3-dh\",\"form\":\"LoginForm_form__Kx5pU\",\"inputField\":\"LoginForm_inputField__HbkD5\",\"auth\":\"LoginForm_auth__ZRJve\"};"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilter","state","contacts","filter","getContacts","getLoading","isLoading","getError","error","selectVisibleContacts","contact","toLowerCase","includes","trim","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","allContacts","useSelector","exist","handelInputChange","event","currentTarget","className","scss","onSubmit","preventDefault","conta","toast","addContacts","onChange","autoComplete","type","placeholder","pattern","required","min","ContactsList","useEffect","fetchContacts","style","display","flexDirection","alignItems","onClick","deleteContacts","id","Filter","filterContacts","justifyContent","paddingTop"],"sourceRoot":""}